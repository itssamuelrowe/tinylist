{"version":3,"sources":["theme.js","redux/actionTypes.js","redux/reducers.js","redux/store.js","server/api.js","redux/actions.js","NotesEditor.js","Note.js","NotesList.js","Workspace.js","App.js","reportWebVitals.js","index.js"],"names":["theme","createMuiTheme","palette","primary","main","pink","FETCH_NOTES_COMPLETE","rootReducer","combineReducers","notes","state","action","type","payload","notification","message","category","store","createStore","compose","applyMiddleware","thunk","initializeNote","note","console","log","completed_at","Date","created_at","updated_at","compare","noteA","noteB","getTime","client","version","axios","defaults","baseURL","process","newNote","description","a","post","response","data","saveNote","id","put","deleteNote","delete","getNote","get","getNotes","i","length","sort","uncompleteNote","completeNote","newClient","handleError","dispatch","error","JSON","parse","stringify","showNotification","fetchNotesComplete","ActionTypes","fetchNotes","useStyles","makeStyles","root","padding","adornment","color","light","textField","width","input","fontWeight","NotesEditor","props","old","useState","content","setContent","classes","className","TextField","placeholder","clsx","InputProps","startAdornment","InputAdornment","position","onKeyDown","event","keyCode","value","onChange","target","paddingLeft","paddingRight","display","justifyContent","backgroundColor","invisibleDeleteIcon","breakpoints","up","visibility","striked","textDecoration","Note","hover","setHover","editing","setEditing","onMouseEnter","onMouseLeave","FormControlLabel","control","Checkbox","checked","Boolean","toggleNote","label","Typography","variant","onClick","IconButton","toString","NotesList","map","index","progress","maxWidth","maxHeight","mapDispatchToProps","actions","closeNotification","connect","handleCloseNotification","_event","reason","useEffect","Snackbar","open","autoHideDuration","onClose","SnackbarContent","CircularProgress","severityMap","SUCCESS","ERROR","severity","Alert","elevation","renderNotification","logoText","App","document","title","CssBaseline","ThemeProvider","AppBar","Toolbar","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b1608960.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\nimport pink from \"@material-ui/core/colors/pink\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: pink[600],\n        },\n    },\n});\n\nexport default theme;\n","export const FETCH_NOTES_COMPLETE = \"FETCH_NOTES_COMPLETE\";\n\nexport const SHOW_NOTIFICATION = \"SHOW_NOTIFICATION\";\nexport const CLOSE_NOTIFICATION = \"CLOSE_NOTIFICATION\";\n","import { combineReducers } from \"redux\";\nimport {\n    NEW_NOTE,\n    COMPLETE_NOTE,\n    DELETE_NOTE,\n    FETCH_NOTES,\n    FETCH_NOTES_COMPLETE,\n} from \"./actionTypes\";\n\nfunction notesReducer(state = [], action) {\n    switch (action.type) {\n        case FETCH_NOTES_COMPLETE: {\n            return action.payload;\n        }\n\n        default: {\n            return state;\n        }\n    }\n}\n\nfunction notificationReducer(state = null, action) {\n    if (action.type === \"SHOW_NOTIFICATION\") {\n        return {\n            message: action.payload.message,\n            category: action.payload.category,\n        };\n    } else if (action.type === \"CLOSE_NOTIFICATION\") {\n        return null;\n    }\n    return state;\n}\n\nconst rootReducer = combineReducers({\n    notes: notesReducer,\n    notification: notificationReducer,\n});\n\nexport default rootReducer;\n","import thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nlet store;\nif (process.env.NODE_ENV === \"development\") {\n    store = createStore(\n        rootReducer,\n        compose(applyMiddleware(thunk), composeWithDevTools())\n    );\n} else {\n    store = createStore(rootReducer, compose(applyMiddleware(thunk)));\n}\n\nexport default store;\n","import axios from \"axios\";\n\nconst DEFAULT_API_VERSION = \"v1\";\n\nfunction initializeNote(note) {\n    console.log(note);\n    note.completed_at = note.completed_at ? new Date(note.completed_at) : null;\n    note.created_at = new Date(note.created_at);\n    note.updated_at = new Date(note.updated_at);\n    return note;\n}\n\nfunction compare(noteA, noteB) {\n    if (noteA.completed_at && noteB.completed_at) {\n        return noteA.completed_at.getTime() - noteB.completed_at.getTime();\n    }\n\n    if (!noteA.completed_at) {\n        return -1;\n    }\n\n    if (!noteB.completed_at) {\n        return 1;\n    }\n\n    return -(noteA.created_at.getTime() - noteB.created_at.getTime());\n}\n\nexport function newClient(version = DEFAULT_API_VERSION) {\n    axios.defaults.baseURL = `${process.env.REACT_APP_API_URL}/api/${version}/users/${process.env.REACT_APP_USER_ID}`;\n\n    return {\n        newNote: async (description) => {\n            const response = await axios.post(`/tasks`, { description });\n            return initializeNote(response.data);\n        },\n\n        saveNote: async (id, description) => {\n            const response = await axios.put(`/tasks/${id}`, { description });\n            return initializeNote(response.data);\n        },\n\n        deleteNote: async (note) => {\n            await axios.delete(`/tasks/${note.id}`);\n        },\n\n        getNote: async (id) => {\n            const response = await axios.get(`/tasks/${id}`);\n            return initializeNote(response.data);\n        },\n\n        getNotes: async () => {\n            const response = await axios.get(`/tasks`, {});\n            const notes = response.data;\n            for (let i = 0; i < notes.length; i++) {\n                notes[i] = initializeNote(notes[i]);\n            }\n            notes.sort((noteA, noteB) => compare(noteA, noteB));\n            return notes;\n        },\n\n        uncompleteNote: async (note) => {\n            const response = await axios.put(\n                `/tasks/${note.id}/uncompleted`,\n                {}\n            );\n            return initializeNote(response.data);\n        },\n\n        completeNote: async (note) => {\n            const response = await axios.put(`/tasks/${note.id}/completed`, {});\n            return initializeNote(response.data);\n        },\n    };\n}\n","import * as ActionTypes from \"./actionTypes\";\nimport { newClient } from \"../server/api\";\n\nconst client = newClient();\n\nfunction handleError(dispatch, error, message) {\n    /* By default, if an instance of the Error class is printed, a lot of information is hidden.\n     * Therefore, we convert it to a regular object and then print it.\n     */\n    console.log(error);\n    console.log(JSON.parse(JSON.stringify(error)));\n    let action;\n    if (error.response) {\n        // Assuming that we receive a JSON.\n        action = showNotification(\n            error.response.data.message || message,\n            \"ERROR\"\n        );\n    } else {\n        action = showNotification(message, \"ERROR\");\n    }\n    dispatch(action);\n}\n\nexport function showNotification(message, category) {\n    return {\n        type: ActionTypes.SHOW_NOTIFICATION,\n        payload: {\n            message,\n            category,\n        },\n    };\n}\n\nexport function closeNotification() {\n    return {\n        type: ActionTypes.CLOSE_NOTIFICATION,\n        payload: null,\n    };\n}\n\nexport function newNote(content) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving note...\", \"LOADING\"));\n            await client.newNote(content);\n            dispatch(fetchNotes());\n            dispatch(showNotification(\"Successfully created note\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to create note\");\n        }\n    };\n}\n\nexport function saveNote(id, description) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving note...\", \"LOADING\"));\n            await client.saveNote(id, description);\n            dispatch(fetchNotes());\n            dispatch(showNotification(\"Successfully saved note\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save note\");\n        }\n    };\n}\n\nexport function completeNote(note) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving note...\", \"LOADING\"));\n            await client.completeNote(note);\n            dispatch(fetchNotes());\n            dispatch(showNotification(\"Successfully saved note\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save note\");\n        }\n    };\n}\n\nexport function uncompleteNote(note) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Saving note...\", \"LOADING\"));\n            await client.uncompleteNote(note);\n            dispatch(fetchNotes());\n            dispatch(showNotification(\"Successfully saved note\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to save note\");\n        }\n    };\n}\n\nexport function deleteNote(note) {\n    return async (dispatch) => {\n        try {\n            dispatch(showNotification(\"Deleting note...\", \"LOADING\"));\n            await client.deleteNote(note);\n            dispatch(fetchNotes());\n            dispatch(showNotification(\"Successfully deleted note\", \"SUCCESS\"));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to delete note\");\n        }\n    };\n}\n\nexport function fetchNotesComplete(notes) {\n    return {\n        type: ActionTypes.FETCH_NOTES_COMPLETE,\n        payload: notes,\n    };\n}\n\nexport function fetchNotes() {\n    return async (dispatch) => {\n        try {\n            // dispatch(showNotification('Loading notes...', 'LOADING'));\n            const notes = await client.getNotes();\n            dispatch(fetchNotesComplete(notes));\n        } catch (error) {\n            handleError(dispatch, error, \"Failed to fetch notes\");\n        }\n    };\n}\n","import React, { useState } from \"react\";\nimport { TextField, InputAdornment } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: 32,\n    },\n    adornment: {\n        color: theme.palette.primary.light,\n    },\n    textField: {\n        width: \"100%\",\n    },\n    input: {\n        color: theme.palette.primary.light,\n        fontWeight: 500,\n    },\n}));\n\nfunction NotesEditor(props) {\n    const { newNote, old } = props;\n    const [content, setContent] = useState(props.content || \"\");\n    const classes = useStyles();\n\n    const handleKeyDown = (event) => {\n        if (event.keyCode === 13 && content.length > 0) {\n            newNote(content);\n            setContent(\"\");\n        }\n    };\n\n    return (\n        <div className={classes.root}>\n            <TextField\n                placeholder=\"Add to list...\"\n                className={clsx(classes.textField)}\n                InputProps={{\n                    className: classes.input,\n                    startAdornment: old ? null : (\n                        <InputAdornment position=\"start\">\n                            <AddIcon className={classes.adornment} />\n                        </InputAdornment>\n                    ),\n                }}\n                onKeyDown={handleKeyDown}\n                value={content}\n                onChange={(event) => setContent(event.target.value)}\n            />\n        </div>\n    );\n}\n\nexport default NotesEditor;\n","import React, { useState } from \"react\";\nimport {\n    FormControlLabel,\n    Checkbox,\n    IconButton,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport NotesEditor from \"./NotesEditor\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingLeft: 32,\n        paddingRight: 32,\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        \"&:hover\": {\n            backgroundColor: \"#f0f0f0\",\n        },\n    },\n    note: {\n        width: \"95%\",\n    },\n    invisibleDeleteIcon: {\n        [theme.breakpoints.up(\"md\")]: {\n            visibility: \"hidden\",\n        },\n    },\n    striked: {\n        textDecoration: \"line-through\",\n        color: \"#8A8A8A\",\n    },\n}));\n\nfunction Note(props) {\n    const { note, completeNote, uncompleteNote, deleteNote, saveNote } = props;\n    const classes = useStyles();\n\n    const [hover, setHover] = useState(false);\n    const [editing, setEditing] = useState(false);\n\n    const toggleNote = (note, checked) => {\n        if (checked) {\n            completeNote(note);\n        } else {\n            uncompleteNote(note);\n        }\n    };\n\n    const handleSave = (content) => {\n        saveNote(note.id, content);\n        setEditing(false);\n    };\n\n    if (!editing) {\n        return (\n            <div\n                key={note.id.toString()}\n                className={classes.root}\n                onMouseEnter={() => setHover(true)}\n                onMouseLeave={() => setHover(false)}\n            >\n                <FormControlLabel\n                    className={classes.note}\n                    control={\n                        <Checkbox\n                            checked={Boolean(note.completed_at)}\n                            onChange={(event) =>\n                                toggleNote(note, event.target.checked)\n                            }\n                        />\n                    }\n                    label={\n                        <Typography\n                            variant=\"body1\"\n                            className={note.completed_at ? classes.striked : \"\"}\n                            onClick={(event) => setEditing(true)}\n                        >\n                            {note.description}\n                        </Typography>\n                    }\n                />\n                <IconButton\n                    className={hover ? \"\" : classes.invisibleDeleteIcon}\n                    onClick={(event) => deleteNote(note)}\n                >\n                    <DeleteIcon />\n                </IconButton>\n            </div>\n        );\n    }\n    return (\n        <NotesEditor\n            content={note.description}\n            newNote={handleSave}\n            old={true}\n        />\n    );\n}\n\nexport default Note;\n","import React from \"react\";\nimport Note from \"./Note\";\n\nfunction NotesList(props) {\n    const { notes, completeNote, uncompleteNote, deleteNote, saveNote } = props;\n\n    return notes.map((note, index) => (\n        <Note\n            note={note}\n            completeNote={completeNote}\n            uncompleteNote={uncompleteNote}\n            deleteNote={deleteNote}\n            saveNote={saveNote}\n        />\n    ));\n}\n\nexport default NotesList;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Snackbar, SnackbarContent, CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as actions from \"./redux/actions\";\nimport NotesEditor from \"./NotesEditor\";\nimport NotesList from \"./NotesList\";\n\nconst useStyles = makeStyles((theme) => ({\n    progress: {\n        maxWidth: 24,\n        maxHeight: 24,\n        color: \"white\",\n    },\n}));\n\nfunction Workspace(props) {\n    const {\n        closeNotification,\n        notification,\n        fetchNotes,\n        newNote,\n        completeNote,\n        uncompleteNote,\n        deleteNote,\n        saveNote,\n        notes,\n    } = props;\n    const classes = useStyles();\n\n    const handleCloseNotification = (_event, reason) => {\n        if (reason !== \"clickaway\") {\n            closeNotification();\n        }\n    };\n\n    const renderNotification = (notification) => {\n        if (notification) {\n            if (notification.category === \"LOADING\") {\n                return (\n                    <Snackbar\n                        open={true}\n                        autoHideDuration={6000}\n                        onClose={handleCloseNotification}\n                    >\n                        <SnackbarContent\n                            message={notification.message}\n                            action={\n                                <CircularProgress\n                                    className={classes.progress}\n                                />\n                            }\n                        />\n                    </Snackbar>\n                );\n            }\n\n            const severityMap = {\n                SUCCESS: \"success\",\n                ERROR: \"error\",\n            };\n            const severity = severityMap[notification.category]\n                ? severityMap[notification.category]\n                : \"SUCCESS\";\n\n            return (\n                <Snackbar\n                    open={true}\n                    autoHideDuration={1000}\n                    onClose={handleCloseNotification}\n                >\n                    <Alert\n                        severity={severity}\n                        onClose={handleCloseNotification}\n                        elevation={6}\n                        variant=\"filled\"\n                    >\n                        {notification.message}\n                    </Alert>\n                </Snackbar>\n            );\n        }\n        return null;\n    };\n\n    useEffect(() => {\n        fetchNotes();\n    }, []);\n\n    return (\n        <>\n            <NotesEditor newNote={newNote} />\n            <NotesList\n                notes={notes}\n                completeNote={completeNote}\n                uncompleteNote={uncompleteNote}\n                deleteNote={deleteNote}\n                saveNote={saveNote}\n            />\n            {renderNotification(notification)}\n        </>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        notes: state.notes,\n        notification: state.notification,\n    };\n}\n\nconst mapDispatchToProps = {\n    fetchNotes: actions.fetchNotes,\n    newNote: actions.newNote,\n    completeNote: actions.completeNote,\n    uncompleteNote: actions.uncompleteNote,\n    deleteNote: actions.deleteNote,\n    closeNotification: actions.closeNotification,\n    saveNote: actions.saveNote,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Workspace);\n","import React, { useEffect } from \"react\";\nimport {\n    ThemeProvider,\n    Container,\n    CssBaseline,\n    AppBar,\n    Toolbar,\n    Typography,\n} from \"@material-ui/core\";\nimport theme from \"./theme\";\nimport { Provider } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport store from \"./redux/store\";\nimport Workspace from \"./Workspace\";\n\nconst useStyles = makeStyles((theme) => ({\n    logoText: {\n        fontWeight: 600,\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n    useEffect(() => {\n        document.title = \"TinyList\";\n    }, []);\n\n    return (\n        <CssBaseline>\n            <ThemeProvider theme={theme}>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.logoText}>\n                            TinyList\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Container>\n                    <Provider store={store}>\n                        <Workspace />\n                    </Provider>\n                </Container>\n            </ThemeProvider>\n        </CssBaseline>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}